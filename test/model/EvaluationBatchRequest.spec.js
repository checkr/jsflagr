/*
 * Flagr
 * Flagr is a feature flagging, A/B testing and dynamic configuration microservice. The base path for all the APIs is \"/api/v1\". 
 *
 * OpenAPI spec version: 1.1.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Jsflagr);
  }
}(this, function(expect, Jsflagr) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('EvaluationBatchRequest', function() {
      beforeEach(function() {
        instance = new Jsflagr.EvaluationBatchRequest();
      });

      it('should create an instance of EvaluationBatchRequest', function() {
        // TODO: update the code to test EvaluationBatchRequest
        expect(instance).to.be.a(Jsflagr.EvaluationBatchRequest);
      });

      it('should have the property entities (base name: "entities")', function() {
        // TODO: update the code to test the property entities
        expect(instance).to.have.property('entities');
        // expect(instance.entities).to.be(expectedValueLiteral);
      });

      it('should have the property enableDebug (base name: "enableDebug")', function() {
        // TODO: update the code to test the property enableDebug
        expect(instance).to.have.property('enableDebug');
        // expect(instance.enableDebug).to.be(expectedValueLiteral);
      });

      it('should have the property flagIDs (base name: "flagIDs")', function() {
        // TODO: update the code to test the property flagIDs
        expect(instance).to.have.property('flagIDs');
        // expect(instance.flagIDs).to.be(expectedValueLiteral);
      });

      it('should have the property flagKeys (base name: "flagKeys")', function() {
        // TODO: update the code to test the property flagKeys
        expect(instance).to.have.property('flagKeys');
        // expect(instance.flagKeys).to.be(expectedValueLiteral);
      });

      it('should have the property flagTags (base name: "flagTags")', function() {
        // TODO: update the code to test the property flagTags
        expect(instance).to.have.property('flagTags');
        // expect(instance.flagTags).to.be(expectedValueLiteral);
      });

    });
  });

}));
