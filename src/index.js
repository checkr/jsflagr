/**
 * Flagr
 * Flagr is a feature flagging, A/B testing and dynamic configuration microservice
 *
 * OpenAPI spec version: 1.0.10
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Constraint', 'model/CreateConstraintRequest', 'model/CreateFlagRequest', 'model/CreateSegmentRequest', 'model/CreateVariantRequest', 'model/Distribution', 'model/Error', 'model/EvalContext', 'model/EvalDebugLog', 'model/EvalResult', 'model/EvaluationBatchRequest', 'model/EvaluationBatchResponse', 'model/EvaluationEntity', 'model/Flag', 'model/FlagSnapshot', 'model/PutDistributionsRequest', 'model/PutFlagRequest', 'model/PutSegmentReorderRequest', 'model/PutSegmentRequest', 'model/PutVariantRequest', 'model/Segment', 'model/SegmentDebugLog', 'model/SetFlagEnabledRequest', 'model/Variant', 'api/ConstraintApi', 'api/DistributionApi', 'api/EvaluationApi', 'api/ExportApi', 'api/FlagApi', 'api/HealthApi', 'api/SegmentApi', 'api/VariantApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Constraint'), require('./model/CreateConstraintRequest'), require('./model/CreateFlagRequest'), require('./model/CreateSegmentRequest'), require('./model/CreateVariantRequest'), require('./model/Distribution'), require('./model/Error'), require('./model/EvalContext'), require('./model/EvalDebugLog'), require('./model/EvalResult'), require('./model/EvaluationBatchRequest'), require('./model/EvaluationBatchResponse'), require('./model/EvaluationEntity'), require('./model/Flag'), require('./model/FlagSnapshot'), require('./model/PutDistributionsRequest'), require('./model/PutFlagRequest'), require('./model/PutSegmentReorderRequest'), require('./model/PutSegmentRequest'), require('./model/PutVariantRequest'), require('./model/Segment'), require('./model/SegmentDebugLog'), require('./model/SetFlagEnabledRequest'), require('./model/Variant'), require('./api/ConstraintApi'), require('./api/DistributionApi'), require('./api/EvaluationApi'), require('./api/ExportApi'), require('./api/FlagApi'), require('./api/HealthApi'), require('./api/SegmentApi'), require('./api/VariantApi'));
  }
}(function(ApiClient, Constraint, CreateConstraintRequest, CreateFlagRequest, CreateSegmentRequest, CreateVariantRequest, Distribution, Error, EvalContext, EvalDebugLog, EvalResult, EvaluationBatchRequest, EvaluationBatchResponse, EvaluationEntity, Flag, FlagSnapshot, PutDistributionsRequest, PutFlagRequest, PutSegmentReorderRequest, PutSegmentRequest, PutVariantRequest, Segment, SegmentDebugLog, SetFlagEnabledRequest, Variant, ConstraintApi, DistributionApi, EvaluationApi, ExportApi, FlagApi, HealthApi, SegmentApi, VariantApi) {
  'use strict';

  /**
   * Flagr_is_a_feature_flagging_AB_testing_and_dynamic_configuration_microservice.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Flagr = require('index'); // See note below*.
   * var xxxSvc = new Flagr.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Flagr.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Flagr.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Flagr.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.10
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Constraint model constructor.
     * @property {module:model/Constraint}
     */
    Constraint: Constraint,
    /**
     * The CreateConstraintRequest model constructor.
     * @property {module:model/CreateConstraintRequest}
     */
    CreateConstraintRequest: CreateConstraintRequest,
    /**
     * The CreateFlagRequest model constructor.
     * @property {module:model/CreateFlagRequest}
     */
    CreateFlagRequest: CreateFlagRequest,
    /**
     * The CreateSegmentRequest model constructor.
     * @property {module:model/CreateSegmentRequest}
     */
    CreateSegmentRequest: CreateSegmentRequest,
    /**
     * The CreateVariantRequest model constructor.
     * @property {module:model/CreateVariantRequest}
     */
    CreateVariantRequest: CreateVariantRequest,
    /**
     * The Distribution model constructor.
     * @property {module:model/Distribution}
     */
    Distribution: Distribution,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The EvalContext model constructor.
     * @property {module:model/EvalContext}
     */
    EvalContext: EvalContext,
    /**
     * The EvalDebugLog model constructor.
     * @property {module:model/EvalDebugLog}
     */
    EvalDebugLog: EvalDebugLog,
    /**
     * The EvalResult model constructor.
     * @property {module:model/EvalResult}
     */
    EvalResult: EvalResult,
    /**
     * The EvaluationBatchRequest model constructor.
     * @property {module:model/EvaluationBatchRequest}
     */
    EvaluationBatchRequest: EvaluationBatchRequest,
    /**
     * The EvaluationBatchResponse model constructor.
     * @property {module:model/EvaluationBatchResponse}
     */
    EvaluationBatchResponse: EvaluationBatchResponse,
    /**
     * The EvaluationEntity model constructor.
     * @property {module:model/EvaluationEntity}
     */
    EvaluationEntity: EvaluationEntity,
    /**
     * The Flag model constructor.
     * @property {module:model/Flag}
     */
    Flag: Flag,
    /**
     * The FlagSnapshot model constructor.
     * @property {module:model/FlagSnapshot}
     */
    FlagSnapshot: FlagSnapshot,
    /**
     * The PutDistributionsRequest model constructor.
     * @property {module:model/PutDistributionsRequest}
     */
    PutDistributionsRequest: PutDistributionsRequest,
    /**
     * The PutFlagRequest model constructor.
     * @property {module:model/PutFlagRequest}
     */
    PutFlagRequest: PutFlagRequest,
    /**
     * The PutSegmentReorderRequest model constructor.
     * @property {module:model/PutSegmentReorderRequest}
     */
    PutSegmentReorderRequest: PutSegmentReorderRequest,
    /**
     * The PutSegmentRequest model constructor.
     * @property {module:model/PutSegmentRequest}
     */
    PutSegmentRequest: PutSegmentRequest,
    /**
     * The PutVariantRequest model constructor.
     * @property {module:model/PutVariantRequest}
     */
    PutVariantRequest: PutVariantRequest,
    /**
     * The Segment model constructor.
     * @property {module:model/Segment}
     */
    Segment: Segment,
    /**
     * The SegmentDebugLog model constructor.
     * @property {module:model/SegmentDebugLog}
     */
    SegmentDebugLog: SegmentDebugLog,
    /**
     * The SetFlagEnabledRequest model constructor.
     * @property {module:model/SetFlagEnabledRequest}
     */
    SetFlagEnabledRequest: SetFlagEnabledRequest,
    /**
     * The Variant model constructor.
     * @property {module:model/Variant}
     */
    Variant: Variant,
    /**
     * The ConstraintApi service constructor.
     * @property {module:api/ConstraintApi}
     */
    ConstraintApi: ConstraintApi,
    /**
     * The DistributionApi service constructor.
     * @property {module:api/DistributionApi}
     */
    DistributionApi: DistributionApi,
    /**
     * The EvaluationApi service constructor.
     * @property {module:api/EvaluationApi}
     */
    EvaluationApi: EvaluationApi,
    /**
     * The ExportApi service constructor.
     * @property {module:api/ExportApi}
     */
    ExportApi: ExportApi,
    /**
     * The FlagApi service constructor.
     * @property {module:api/FlagApi}
     */
    FlagApi: FlagApi,
    /**
     * The HealthApi service constructor.
     * @property {module:api/HealthApi}
     */
    HealthApi: HealthApi,
    /**
     * The SegmentApi service constructor.
     * @property {module:api/SegmentApi}
     */
    SegmentApi: SegmentApi,
    /**
     * The VariantApi service constructor.
     * @property {module:api/VariantApi}
     */
    VariantApi: VariantApi
  };

  return exports;
}));
